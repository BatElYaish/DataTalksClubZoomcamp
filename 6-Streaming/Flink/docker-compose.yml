services:
  broker:
    image: confluentinc/cp-kafka:7.9.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092,CONTROLLER://broker:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_METADATA_LOG_DIR: /tmp/kraft-combined-logs
      KAFKA_KRAFT_CLUSTER_ID: "LelekXR6Tmm13wAUxj3dqw"
      CLUSTER_ID: "LelekXR6Tmm13wAUxj3dqw"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.9.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29092"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.9.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  jobmanager:
    build:
      context: .
      dockerfile: Dockerfile.flink
    hostname: jobmanager
    container_name: jobmanager
    ports:
      - "8083:8081"
      - "6123:6123"
    volumes:
      - ./src:/opt/src
      - ./:/opt/flink/usrlib
      - ./keys/:/var/private/ssl/
      - ./keys/gcp-credentials.json:/opt/flink/conf/gcp-credentials.json:ro
    command: jobmanager
    extra_hosts:
      - "host.docker.internal:127.0.0.1"
      - "host.docker.internal:host-gateway"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        state.backend: filesystem
        state.checkpoints.dir: file:///tmp/flink-checkpoints
        heartbeat.timeout: 18000000
        jobmanager.memory.process.size: 1600m
        taskmanager.memory.process.size: 4096m
        taskmanager.memory.flink.size: 3072m
        taskmanager.memory.task.heap.size: 1024m
        taskmanager.memory.managed.size: 1024m
        jobmanager.bind-host: 0.0.0.0        
        taskmanager.bind-host: 0.0.0.0        
        jobmanager.rpc.bind-port: 6123
        rest.bind-port: 8081        
        rest.address: 0.0.0.0
      - POSTGRES_URL=jdbc:postgresql://postgres:5432/postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - GOOGLE_APPLICATION_CREDENTIALS=/opt/flink/conf/gcp-credentials.json

  taskmanager:
    build:
      context: .
      dockerfile: Dockerfile.flink
    hostname: taskmanager
    container_name: taskmanager
    depends_on:
      - jobmanager
    volumes:
      - ./src:/opt/src
      - ./:/opt/flink/usrlib
      - ./keys/:/var/private/ssl/
      - ./keys/gcp-credentials.json:/opt/flink/conf/gcp-credentials.json:ro
    command: taskmanager --taskmanager.registration.timeout 5 min
    extra_hosts:
      - "host.docker.internal:127.0.0.1" #// Linux
      - "host.docker.internal:host-gateway"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 15
        parallelism.default: 3
        state.backend: filesystem
        state.checkpoints.dir: file:///tmp/flink-checkpoints
        heartbeat.timeout: 18000000
        taskmanager.memory.process.size: 4096m
        taskmanager.memory.flink.size: 3072m
        taskmanager.memory.task.heap.size: 1024m
        taskmanager.memory.managed.size: 1024m
        taskmanager.bind-host: 0.0.0.0        
        taskmanager.host: taskmanager

  postgres:
    image: postgres:17
    container_name: postgres
    restart: on-failure
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    extra_hosts:
     - "host.docker.internal:127.0.0.1"
     - "host.docker.internal:host-gateway"
     
networks:
  default:
    name: kafka-spark-network
    external: true